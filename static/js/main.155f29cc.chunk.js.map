{"version":3,"sources":["App.tsx","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","index.tsx"],"names":["FormType","id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","getUserById","usersFromServer","find","userId","App","useState","visibleTodos","setTodos","chosenUser","setChosenUser","newTodoTitle","setTodoTitle","titleError","setTitleErrorStatus","userError","setUserErrorStatus","handleChange","event","target","value","newTitleForm","toString","replace","userSelectForm","Error","action","method","onSubmit","preventDefault","trim","newTodo","Math","max","htmlFor","type","placeholder","onChange","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.155f29cc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nenum FormType {\n  newTitleForm = 'newTitleForm',\n  userSelectForm = 'userSelectForm',\n}\n\nfunction getUserById(id: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === id);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\ntype ChangeableElement = HTMLInputElement | HTMLSelectElement;\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setTodos] = useState(todos);\n  const [chosenUser, setChosenUser] = useState<User | null>(null);\n  const [newTodoTitle, setTodoTitle] = useState('');\n  const [titleError, setTitleErrorStatus] = useState(false);\n  const [userError, setUserErrorStatus] = useState(false);\n\n  const handleChange = (event: React.ChangeEvent<ChangeableElement>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case FormType.newTitleForm.toString():\n        setTitleErrorStatus(false);\n        setTodoTitle(value.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, ''));\n        break;\n\n      case FormType.userSelectForm.toString():\n        setUserErrorStatus(false);\n        setChosenUser(getUserById(+value));\n        break;\n\n      default: throw new Error('error');\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!chosenUser) {\n      setUserErrorStatus(true);\n    }\n\n    if (!newTodoTitle.trim()) {\n      setTitleErrorStatus(true);\n    }\n\n    if (!chosenUser || !newTodoTitle.trim()) {\n      return;\n    }\n\n    const newTodoId = Math.max(...visibleTodos.map(todo => todo.id)) + 1;\n\n    const newTodo = {\n      id: newTodoId,\n      userId: chosenUser ? chosenUser.id : -1,\n      title: newTodoTitle,\n      completed: false,\n      user: chosenUser,\n    };\n\n    setTodos([\n      ...visibleTodos,\n      newTodo,\n    ]);\n\n    setChosenUser(null);\n    setTodoTitle('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"newTitleForm\">Title: </label>\n          <input\n            name=\"newTitleForm\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTodoTitle}\n            onChange={handleChange}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelectForm\">User: </label>\n          <select\n            name=\"userSelectForm\"\n            data-cy=\"userSelect\"\n            defaultValue=\"0\"\n            value={chosenUser?.id || '0'}\n            onChange={handleChange}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n\n            { usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            )) }\n          </select>\n\n          {userError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo : Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}